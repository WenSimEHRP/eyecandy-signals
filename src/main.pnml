grf {
    grfid:"WS\01\02";
    name:string(STR_GRF_NAME);
    desc:string(STR_GRF_DESC);
    url:string(STR_GRF_URL);
    version :1;
    min_compatible_version :0;
}

if (!extended_feature_test("action3_signals_custom_signal_sprites")) {
	error(FATAL, string(STR_UNSUPPORTED_VERSION));
}

/* Naming scheme:

- Templates:     t_<name>
- Spritesets:    s_<name>
- Switches:      sw_<name>
- Spritelayouts: sp_<name>
- Parameters:    p_<name>
- Procedures:    fn_<name>

*/

spriteset (s_empty) {
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
    [1,1,1,1,0,0,"./gfx/auz_embankment.png"]
}

template t_icon(x, y, xoffset, yoffset, path) {
    []
    []
    []
    []
    []
    []
    [x*17+xoffset,y*29+yoffset,16,28,0,-30,path]
    []
}

#define SIGNAL_TYPE_BLOCK_SIGNAL 0
#define SIGNAL_TYPE_ENTRY_SIGNAL 1
#define SIGNAL_TYPE_EXIT_SIGNAL 2
#define SIGNAL_TYPE_COMBO_SIGNAL 3
#define SIGNAL_TYPE_PATH_SIGNAL 4
#define SIGNAL_TYPE_ONE_WAY_PATH_SIGNAL 5
#define SIGNAL_TYPE_PROGRAMMABLE_SIGNAL 6
#define SIGNAL_TYPE_NO_ENTRY_SIGNAL 7
#define SIGNAL_STYLE_LIGHTS 0
#define SIGNAL_STYLE_SEMAPHORE 1

#define SIGNAL_GUI(name) \
switch (FEAT_SIGNALS, SELF, sw_##name, getbits(extra_callback_info2, 0, 8)) { \
    0: s_##name; \
    default: s_##name##_green; \
}

#define SIGNAL_GUI2(name) \
SIGNAL_GUI(name##_icon_block) \
SIGNAL_GUI(name##_icon_pbs) \
SIGNAL_GUI(name##_icon_pbs_oneway) \
SIGNAL_GUI(name##_icon_noentry) \
SIGNAL_GUI(name##_icon_block_semaphore) \
SIGNAL_GUI(name##_icon_pbs_semaphore) \
SIGNAL_GUI(name##_icon_pbs_oneway_semaphore) \
SIGNAL_GUI(name##_icon_noentry_semaphore) \
switch (FEAT_SIGNALS, SELF, sw_##name##_icon, (getbits(extra_callback_info2, 16, 8) << 0) | (getbits(extra_callback_info2, 8, 8) << 8)) { \
    SIGNAL_TYPE_BLOCK_SIGNAL:                       sw_##name##_icon_block; \
    SIGNAL_TYPE_PATH_SIGNAL:                        sw_##name##_icon_pbs; \
    SIGNAL_TYPE_ONE_WAY_PATH_SIGNAL:                sw_##name##_icon_pbs_oneway; \
    SIGNAL_TYPE_NO_ENTRY_SIGNAL:                    sw_##name##_icon_noentry; \
    (1 << 8) | (SIGNAL_TYPE_BLOCK_SIGNAL):          sw_##name##_icon_block_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_PATH_SIGNAL):           sw_##name##_icon_pbs_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_ONE_WAY_PATH_SIGNAL):   sw_##name##_icon_pbs_oneway_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_NO_ENTRY_SIGNAL):       sw_##name##_icon_noentry_semaphore; \
    default: 1288; \
} \

#define SIGNAL_TRACK(name) \
switch (FEAT_SIGNALS, SELF, sw_##name##_track, (getbits(extra_callback_info2, 16, 8) << 0) | (getbits(extra_callback_info2, 8, 8) << 8)) { \
    SIGNAL_TYPE_BLOCK_SIGNAL:                       s_##name##_track_block; \
    SIGNAL_TYPE_PATH_SIGNAL:                        s_##name##_track_pbs; \
    SIGNAL_TYPE_ONE_WAY_PATH_SIGNAL:                s_##name##_track_pbs_oneway; \
    SIGNAL_TYPE_NO_ENTRY_SIGNAL:                    s_##name##_track_noentry; \
    (1 << 8) | (SIGNAL_TYPE_BLOCK_SIGNAL):          s_##name##_track_block_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_PATH_SIGNAL):           s_##name##_track_pbs_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_ONE_WAY_PATH_SIGNAL):   s_##name##_track_pbs_oneway_semaphore; \
    (1 << 8) | (SIGNAL_TYPE_NO_ENTRY_SIGNAL):       s_##name##_track_noentry_semaphore; \
    default: 1288; \
}

template t_embankment(x, path) {
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [x*(64+1)+1,   1, 64, 39, -45, -25, path]
    [x*(64+1)+1,  41, 64, 39, -19, -14, path]
    [x*(64+1)+1,  81, 64, 31, -27, -22, path]
    [x*(64+1)+1, 113, 64, 31, -35, -10, path]
}

spriteset (s_embankment_track_block)                {t_embankment(0, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_block_semaphore)      {t_embankment(1, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_pbs)                  {t_embankment(2, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_pbs_semaphore)        {t_embankment(3, "./gfx/auz_embankment.png")}
// spriteset (s_embankment_track_pbs_oneway)           {t_embankment(4, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_pbs_oneway_semaphore) {t_embankment(5, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_noentry)              {t_embankment(6, "./gfx/auz_embankment.png")}
spriteset (s_embankment_track_noentry_semaphore)    {t_embankment(7, "./gfx/auz_embankment.png")}

spriteset (s_embankment_track_pbs_oneway) {
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [1,1,1,1,0,0, "./gfx/auz_embankment.png"]
    [4*(64+1)+1,    1, 64, 39, -45, -25, "./gfx/auz_embankment.png"]
    [4*(64+1)+1,   41, 64, 39, -19, -14, "./gfx/auz_embankment.png"]
    [       170,  145, 32, 39,   5, -30, "./gfx/auz_embankment.png"]
    [       137,  145, 32, 39, -35, -18, "./gfx/auz_embankment.png"]
}

spriteset (s_embankment_icon_block)                         {t_icon(0,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_block_green)                   {t_icon(1,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs)                           {t_icon(2,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_green)                     {t_icon(3,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_oneway)                    {t_icon(4,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_oneway_green)              {t_icon(5,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_noentry)                       {t_icon(6,0,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_noentry_green)                 {t_icon(7,0,1,145,"./gfx/auz_embankment.png")}

spriteset (s_embankment_icon_block_semaphore)               {t_icon(0,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_block_semaphore_green)         {t_icon(1,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_semaphore)                 {t_icon(2,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_semaphore_green)           {t_icon(3,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_oneway_semaphore)          {t_icon(4,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_pbs_oneway_semaphore_green)    {t_icon(5,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_noentry_semaphore)             {t_icon(6,1,1,145,"./gfx/auz_embankment.png")}
spriteset (s_embankment_icon_noentry_semaphore_green)       {t_icon(7,1,1,145,"./gfx/auz_embankment.png")}

SIGNAL_GUI2(embankment)
SIGNAL_TRACK(embankment)

switch (FEAT_SIGNALS, SELF, sw_embankment_direction,
    (signal_context_is_second == 0) ^ (signal_side == SIGNAL_SIDE_LEFT)
        ) {
    // this makes sure that the signal is always on the correct side of the track
    1: sw_embankment_track;
    default: s_empty;
}

switch (FEAT_SIGNALS, SELF, sw_embankment, signal_context) {
    SIGNAL_CONTEXT_GUI: sw_embankment_icon;
    default: sw_embankment_direction;
}

/*

SIGNAL_GUI2(tower)
SIGNAL_TRACK(tower)

switch (FEAT_SIGNALS, SELF, sw_tower_direction,
    (signal_context_is_second == 0) ^ (signal_side == SIGNAL_SIDE_LEFT)
        ) {
    // this makes sure that the signal is always on the correct side of the track
    1: sw_tower_track;
    default: s_empty;
}

switch (FEAT_SIGNALS, SELF, sw_tower, signal_context) {
    SIGNAL_CONTEXT_GUI: sw_tower_icon;
    default: sw_tower_direction;
}

*/

switch (FEAT_SIGNALS, SELF, sw_signals, signal_style) {
    1: sw_embankment;
    // 2: sw_tower;
}

#define SIGNAL_STYLE \
bitmask( \
    SIGNAL_TYPE_NORMAL, \
    SIGNAL_TYPE_PBS, \
    SIGNAL_TYPE_PBS_ONEWAY, \
    SIGNAL_TYPE_NO_ENTRY \
)

item (FEAT_SIGNALS, signals, 0) {
    property {
        extra_aspects: 0;
        no_default_style: 1;

        define_style: 1;
        style_name: string(STR_SIGNAL_STYLE_1);
        style_electric_enabled:  SIGNAL_STYLE;
        style_semaphore_enabled: SIGNAL_STYLE;
        style_always_reserve_through: 1;
        style_both_sides: 1;
        style_no_aspect_increase: 1;

        // define_style: 2;
        // style_name: string(STR_SIGNAL_STYLE_2);
        // style_electric_enabled:  SIGNAL_STYLE;
        // style_semaphore_enabled: SIGNAL_STYLE;
        // style_always_reserve_through: 0;
        // style_both_sides: 1;
    }
    graphics {
        sw_signals;
    }
}

/*
replace (1291) {
	[1,116,16,28,0,-30,"./gfx/embank1.png"]
}
*/
